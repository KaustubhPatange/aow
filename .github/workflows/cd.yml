name: Release CI

on:
  release:
    types:
      - created

jobs:
  deploy:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Build
        run: cargo build --release

      - name: Build Release Mac
        if: matrix.os == 'macos-latest'
        run: |
          strip target/release/aow
          mkdir -p release
          tar -C ./target/release/ -czvf ./release/aow-mac.tar.gz ./aow

      - name: Build Release Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo install cargo-deb
          cargo deb
          strip target/release/aow
          mkdir -p release
          mv target/debian/*.deb ./release/aow-linux.deb
          tar -C ./target/release/ -czvf ./release/aow-linux.tar.gz ./aow

      - name: Build Release Win
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p release
          tar -C ./target/release/ -czvf ./release/aow-win.tar.gz ./aow.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.tag_name }}
          release_name: Release ${{ github.event.tag_name }}
          draft: true
          files: |
            ./release/*.tar.gz
            ./release/*.zip
            ./release/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notification:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Sending complete notifications
        env:
          DISCORD_WEBHOOK: ${{ secrets.WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "{{ EVENT_PAYLOAD.repository.full_name }} - A new release is created."
